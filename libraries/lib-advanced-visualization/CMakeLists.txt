PROJECT(mensia-advanced-visualization)
MESSAGE(STATUS "Now building ${PROJECT_NAME} ${PROJECT_VERSION} (${OV_PROJECT_BRANCH}~${OV_PROJECT_COMMITHASH})" )

INCLUDE_DIRECTORIES("include/mensia/")
INCLUDE_DIRECTORIES("include/mensia/advanced-visualization")

FILE(GLOB_RECURSE SRC_FILES src/*.cpp src/*.hpp include/*.hpp)
INCLUDE("FindSourceRCProperties")
ADD_LIBRARY(${PROJECT_NAME}-static STATIC ${SRC_FILES})
ADD_LIBRARY(${PROJECT_NAME} SHARED EXCLUDE_FROM_ALL ${SRC_FILES})

IF(UNIX)
	SET_TARGET_PROPERTIES(${PROJECT_NAME}-static PROPERTIES COMPILE_FLAGS "-fPIC")
ENDIF(UNIX)

SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES
	VERSION ${PROJECT_VERSION}
	SOVERSION ${PROJECT_VERSION_MAJOR}
	COMPILE_FLAGS "-DLMAV_Exports -DLMAV_Shared")

ADD_DEFINITIONS(-D_USE_MATH_DEFINES)	# Definition for constant math as M_PI

INCLUDE("FindThirdPartyOpenGL")
INCLUDE("FindThirdPartyEigen")

# ---------------------------------
# Target macros
# Defines target operating system, architecture and compiler
# ---------------------------------
SET_BUILD_PLATFORM()

# -----------------------------
# Install files
# -----------------------------
#INSTALL(TARGETS ${PROJECT_NAME}
#	RUNTIME DESTINATION ${DIST_BINDIR}
#	LIBRARY DESTINATION ${DIST_LIBDIR}
#	ARCHIVE DESTINATION ${DIST_LIBDIR})
INSTALL(TARGETS ${PROJECT_NAME}-static
	RUNTIME DESTINATION ${DIST_BINDIR}
	LIBRARY DESTINATION ${DIST_LIBDIR}
	ARCHIVE DESTINATION ${DIST_LIBDIR})


INSTALL(DIRECTORY include/ DESTINATION ${DIST_INCLUDEDIR} FILES_MATCHING PATTERN "*.hpp")

ADD_SUBDIRECTORY(test)
