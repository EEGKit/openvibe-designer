# ---------------------------------
# Finds libmensia-engine
# Adds library to target
# Adds include path
# ---------------------------------
OPTION(DYNAMIC_LINK_LIBENGINE "Dynamically link libmensia-engine" ON)

IF(DYNAMIC_LINK_LIBENGINE)
	ADD_DEFINITIONS(-DLME_Shared)
ENDIF(DYNAMIC_LINK_LIBENGINE)

IF(DYNAMIC_LINK_LIBENGINE)
	SET(LIBENGINE_LINKING "")
ELSE(DYNAMIC_LINK_LIBENGINE)
	SET(LIBENGINE_LINKING -static)
ENDIF(DYNAMIC_LINK_LIBENGINE)

SET(MENSIA_SRC_DIR ${CMAKE_SOURCE_DIR}/libraries/lib-engine/include)
#SET(PATH_LIBMENSIAENGINE "${MENSIA_BASE_DIR}/libraries/lib-engine/include/")
SET(PATH_LIBMENSIAENGINE "PATH_LIBMENSIAENGINE-NOTFOUND")
FIND_PATH(PATH_LIBMENSIAENGINE mensia/engine.h PATHS ${MENSIA_SRC_DIR} NO_DEFAULT_PATH)
IF(PATH_LIBMENSIAENGINE)
	debug_message( "  Found libmensia-engine... ${PATH_LIBMENSIAENGINE}")
	INCLUDE_DIRECTORIES(${PATH_LIBMENSIAENGINE}/)

	TARGET_LINK_LIBRARIES(${PROJECT_NAME} mensia-engine${LIBENGINE_LINKING})
	debug_message( "Linking with mensia-engine${LIBENGINE_LINKING}")

	ADD_DEFINITIONS(-DTARGET_HAS_LibArchway)
ELSE()
	MESSAGE(WARNING "  FAILED to find libmensia-engine... ${MENSIA_SRC_DIR}")
ENDIF()


